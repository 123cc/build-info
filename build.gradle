/*
 * Copyright (C) 2010 JFrog Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jfrog.build.Version
import org.apache.tools.ant.filters.ReplaceTokens

// Root project version should not be used
version = '2'
baseProjectNames = ['build-info-api', 'build-info-client', 'build-info-extractor']

allprojects {
    apply plugin: 'idea'
    group = 'org.jfrog.buildinfo'
}

def baseProjects() {
    subprojects.findAll { p -> baseProjectNames.contains(p.name) }
}

def extractorProjects() {
    subprojects.findAll { p -> !baseProjectNames.contains(p.name) }
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'java'
    sourceCompatibility = 1.5
    targetCompatibility = 1.5
    buildInfoVersion = new Version(rootProject, baseProjectNames)

    dependencies {
        compile group: 'commons-lang', name: 'commons-lang', version: '2.4'
        compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
        testCompile group: 'org.testng', name: 'testng', version: '5.12.1'
    }

    configure(install.repositories.mavenInstaller) {
        pom.project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            mailingLists {
                mailingList {
                    name 'JFrog Mailing List'
                    subscribe 'https://lists.sourceforge.net/lists/listinfo/artifactory-users'
                    archive 'http://forums.jfrog.org/Artifactory-Users-f2377369.html'
                }
            }
            developers{
                developer{
                    id 'tomerc'
                    name 'Tomer Cohen'
                    email 'tomerc at jfrog dot org'
                }
                developer{
                    id 'freds'
                    name 'Frederic Simon'
                    email 'frederic dot simon at jfrog dot org'
                }
            }
        }
    }
}

configure(baseProjects()) {
    version = buildInfoVersion
    dependencies {
        compile "com.google.guava:guava:r07"
        compile "com.thoughtworks.xstream:xstream:1.3.1"
    }
    test.useTestNG()
}

configure(extractorProjects()) {
    configurations {
        tools
        uberJar {
            description = 'All jar that should be included in the Uber Jar'
            transitive = true
        }
        compile {
            extendsFrom uberJar
        }
    }

    dependencies {
        tools group: 'com.tonicsystems.jarjar', name: 'jarjar-plugin', version: '1.0'
    }

    task jarAll(type: Jar, dependsOn: jar) {
        inputs.files jar.archivePath
        classifier = 'uber'
        doLast {
            project.ant {
                taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask", classpath: configurations.tools.asPath
                jarjar(jarfile: archivePath) {
                    zipfileset(src: jar.archivePath)
                    configurations.uberJar.files.each {jarjarFile ->
                        zipfileset(src: jarjarFile)
                    }
                }
            }
        }
    }

    artifacts {
        archives jarAll
    }
}

project('build-info-api') {
    description = 'JFrog Build-Info API'
}

project('build-info-client') {
    description = 'JFrog Build-Info Client'
    dependencies {
        compile project(':build-info-api')
        compile "org.apache.httpcomponents:httpclient:4.0"
        compile "org.codehaus.jackson:jackson-mapper-asl:1.5.1"
    }
}

project('build-info-extractor') {
    description = 'JFrog Build-Info Extractor'
    dependencies {
        compile project(':build-info-client')
        testCompile "org.easymock:easymockclassextension:2.5.2"
    }
}

project('build-info-extractor-ivy') {
    version = new Version(project)
    description = 'JFrog Build-Info Ivy Extractor'
    dependencies {
        uberJar project(':build-info-extractor')
        project(':build-info-extractor')
        uberJar "org.slf4j:slf4j-api:1.5.8"
        uberJar "org.aspectj:aspectjweaver:1.6.9"
        compile("com.google.code.findbugs:jsr305:1.3.9") {
            provided: true
        }
        compile("org.apache.ivy:ivy:2.1.0") {
            provided: true
        }
        compile("org.apache.ant:ant:1.8.1") {
            provided: true
        }
    }
}

project('build-info-extractor-gradle') {
    apply plugin: 'groovy'
    version = new Version(project)
    description = 'JFrog Build-Info Gradle Extractor'

    dependencies {
        compile gradleApi()
        uberJar project(':build-info-extractor')
        project(':build-info-extractor')
        compile("org.codehaus.plexus:plexus-component-annotations:1.5.4") {
            provided: true
        }
        compile("com.google.code.findbugs:jsr305:1.3.9") {
            provided: true
        }
        compile group: 'javax.annotation', name: 'jsr250-api', version: '1.0'
        compile group: 'org.apache.ivy', name: 'ivy', version: '2.2.0'
        groovy localGroovy()
        testCompile(group: 'org.gradle', name: 'gradle-core', version: '0.9+', configuration: 'publicTestCompile')
        testCompile(group: 'net.java.dev.jna', name: 'jna', version: '3.2.2')
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            include '**/*template.gradle'
            filter(ReplaceTokens, tokens: ['fullVersion': version.toString(), 'buildInfoVersion': buildInfoVersion.toString()])
        }
    }
}

project('build-info-extractor-maven3') {
    version = new Version(project)
    description = 'JFrog Build-Info Maven 3 Extractor'

    dependencies {
        uberJar project(':build-info-extractor')
        project(':build-info-extractor')
        compile("org.codehaus.plexus:plexus-component-annotations:1.5.4") {
            provided: true
        }
        compile("org.apache.maven:maven-core:3.0") {
            provided: true
        }

        testCompile "org.easymock:easymockclassextension:2.5.2"
    }
}

dependsOnChildren()
