usePlugin('java')
usePlugin('maven')

group = 'org.jfrog.buildinfo'
version = '1.0-SNAPSHOT'

/*
(5) Define the Maven attributes that will be used for POM auto-generation
 */
def artifactId = projectDir.name
def groupId = group
def versionNumber = version

dependencies {
  compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.3.1'
  compile group: 'com.google.collections', name: 'google-collections', version: '1.0-rc5'
}

/*
(1) Define an Artifactory virtual repository used for dependency resolution
 */
repositories {
  /*
  (2) An optional login/password (will is kept in gradle.properties) and used to authenticate a reader to Artifactory.
  USER, PASSWORD and REALM are coming from gradle.properties
  Uncomment if anonymous access is not allowed.
   */
  //org.apache.ivy.util.url.CredentialsStore.INSTANCE.addCredentials(REALM, HOST, USER, PASSWORD);
  mavenRepo urls: "http://localhost:8080/artifactory/libs-releases";
}

uploadArchives {
  repositories {
    /*
    (6) This will be used to deploy the Gradle artifact and ivy modules
     */
    mavenRepo urls: "http://localhost:8080/artifactory/libs-releases-local";

    /*
    (3) Use this to also deploy an auto-generated POM
     */
    repositories.mavenDeployer {
      repository(url: "http://localhost:8080/artifactory/libs-releases-local") {
        /*
        (4) The login/password of an Artifactory user with deploy privileges.
        USER and PASSWORD are coming from gradle.properties
         */
        authentication(userName: USER, password: PASSWORD)
      }
      pom.version = versionNumber
      pom.artifactId = artifactId
      pom.groupId = groupId
    }
  }
}