import org.gradle.api.internal.GradleInternal
import org.gradle.api.internal.project.ProjectInternal

buildscript {
  def downloadId = 'plugins-releases'
  String[] pathParts
  def artifactoryUrl
  if (sourceURI) {
    logger.debug("sourceURI: $sourceURI")
    String fullPath = sourceURI.path
    pathParts = fullPath.split("/")
    artifactoryUrl = "${sourceURI.scheme}://${sourceURI.authority}/${pathParts[1]}"
  } else {
    artifactoryUrl = 'http://gradle.artifactoryonline.com/gradle/'
    pathParts = artifactoryUrl.split("/")
  }
  logger.debug("artifactory.url: $artifactoryUrl")
  if (pathParts.size() >= 3) {
    downloadId = pathParts[2]
  }
  logger.debug("artifactory.downloadId: $downloadId")
  def artifactoryDownloadUrl
  artifactoryDownloadUrl = artifactoryUrl + "/" + downloadId
  logger.debug("artifactory.downloadUrl: $artifactoryDownloadUrl")

  // TODO: Give the properties found to the initscript??
  //All the tango above for this one - it configures maven repo for the project
  repositories {
    mavenRepo urls: [artifactoryDownloadUrl]
  }
  dependencies {
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:1.0-SNAPSHOT'
  }

}
logger.debug("Applying Artifactory Init Plug-in")

addListener(new ArtifactoryPlugin())
class ArtifactoryPlugin extends BuildAdapter implements BuildListener {

  def void projectsLoaded(Gradle gradle) {
    GradleInternal gradleInternal = (GradleInternal) gradle
    ProjectInternal root = gradleInternal.getRootProject()
    root.allprojects {
      apply {
        apply plugin: org.jfrog.build.ArtifactoryPlugin
      }
    }
  }

}
