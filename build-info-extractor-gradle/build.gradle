/*
 * Copyright (C) 2010 JFrog Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//buildscript {
//  apply {
//    apply from: 'http://repo.jfrog.org/artifactory/repo/org/jfrog/buildinfo/build-info-extractor-gradle/1.0.1/artifactoryplugin-1.0.1.gradle'
//  }
//  repositories {
//    mavenRepo urls: 'http://gradle.artifactoryonline.com/gradle/plugins'
//  }
//}
group = 'org.jfrog.buildinfo'
version = '1.0-SNAPSHOT'
apply {
  apply plugin: 'java'
  apply plugin: 'groovy'
  apply plugin: 'maven'
}

dependencies {
  compile "org.codehaus.groovy:groovy-all:1.7.1",
          "com.tonicsystems.jarjar:jarjar-plugin:1.0",
          "org.jfrog.buildinfo:build-info-extractor:1.4.3",
          "org.jfrog.buildinfo:build-info-api:1.4.3",
          "org.jfrog.buildinfo:build-info-client:1.4.3",
          "com.google.guava:guava:r06",
          "commons-lang:commons-lang:2.4",
          "com.google.code.findbugs:jsr305:1.3.7",
          "javax.annotation:jsr250-api:1.0",
          gradleApi()
  groovy localGroovy()
}
task jarAll(type: Jar, dependsOn: jar) {
  inputs.files jar.archivePath
  appendix = 'uber'
  doLast {
    project.ant {
      taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask", classpath: configurations.runtime.asPath
      jarjar(jarfile: archivePath) {
        zipfileset(src: jar.archivePath)
        configurations.compile.files.findAll {file ->
          ['build-info', 'guava', 'commons-lang'].any { file.name.startsWith(it) && ['ivy'].every {!file.name.startsWith(it)}}
        }.each {jarjarFile ->
          zipfileset(src: jarjarFile)
        }
      }
    }
  }
}
