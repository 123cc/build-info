/*
 * Copyright (C) 2011 JFrog Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * There are 2 ways to activate the Artifactory Build-Info plugin.
 * 1. use apply from directly from the build.gradle as shown below.
 * 2. use the init script "gradle --init-script init.gradle" ATTENTION: Check the URL inside this init.gradle
 * 3. Copy the init.gradle to your ~/.gradle directory and execute normally. ATTENTION: Now the Artifactory URL will
 * always be applied to all your projects.
 *
 * Check the URL that apply uses to get the remote script
 *
 */

import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

buildscript {
    /*
    repositories {
        maven {
            url 'http://repo.jfrog.org/artifactory/repo'
        }
    }
    */
    dependencies {
        classpath files(new File(projectDir, "../../../build/libs/build-info-extractor-gradle-2.0.x-SNAPSHOT-uber.jar"))
    }
}

allprojects {
    apply plugin: 'artifactory'
    group = 'org.jfrog'
    version = '1.0'
}

subprojects {
    apply {
        apply plugin: 'maven'
        apply plugin: 'java'
    }

    dependencies {
        testCompile 'junit:junit:4.7'
    }
    manifest.mainAttributes(provider: 'gradle')
}

evaluationDependsOnChildren()

project('api') {
    configurations {
        simpleFile
    }

    artifacts {
        simpleFile new DefaultPublishArtifact("settings.gradle", "txt", "text", null,
                new Date(), file("$rootDir/settings.gradle"))
    }

    artifactoryPublish {
        publishConfigs configurations.simpleFile
        publishIvy = false
        publishPom = false
        properties {
            simpleFile '**:**:**:*@*', simpleFile: 'only on settings file'
        }
    }
}

artifactoryPublish.skip = true

artifactory {
    //contextUrl = 'http://repo.jfrog.org/artifactory'
    contextUrl = 'http://localhost:8080/artifactory'
    publish {
        repository {
            repoKey = 'libs-release-local'
            username = 'admin'
            password = 'password'
            ivy {
                ivyLayout = '[organization]/[module]/ivy-[revision].xml'
            }
        }
        defaults {
            //publishIvy & publishPom are true by default
            publishArtifacts = true
            publishConfigs('archives')
            //publishIvy = false
            //publishPom = false
            properties = ['qa.level': 'basic']
            properties {
                archives 'org.jfrog:*:*:*@*', key1: 'val1 only on jars', key2: 'val2 only on jars'
                all 'org.jfrog:shared:1.?:*@*', key3: 'val3 only in shared', key4: 'val4 only in shared'
                all 'org.jfrog:*:1.?:*@*', key5: 'val5 on everything published', key6: 'val6 on everything published'
                all 'org.jfrog:*:2.?:*@*', nokey1: 'noVal1'
                foo 'org.jfrog:*:2.?:*@*', nokey1: 'noVal2'
            }
        }
    }
    resolve {
        repoKey = 'repo'
    }
}

//export JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
//gradle build artifactoryPublish -xtest --stacktrace
